{"version":3,"sources":["components/Navbar.tsx","App.tsx","api.ts","stores/PeopleContext.tsx","utils/searchHelper.ts","utils/SexEnum.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","index.tsx"],"names":["Navbar","getLinkClass","isActive","cn","useSearchParams","searchParams","className","role","to","toString","App","useLocation","pathname","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","peoplE","loading","messageNotHasPeople","errorMessage","loadPeople","PeopleProvider","children","useState","setPeoplE","setLoading","setErrorMessage","setMessageNotHasPeople","value","getPeople","people","length","catch","finally","Provider","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SexEnum","cEnturies","PeopleFilters","centuries","query","sex","setSearchParams","ALL","search","MALE","FEMALE","type","placeholder","onChange","e","params","setSearchWith","target","map","century","includes","filter","ch","Loader","PersonLink","person","slugPerson","useParams","slug","motherName","fatherName","name","born","died","useContext","mother","find","pErson","father","parrentLink","parrent","PeopleTable","sorts","order","sort","toggleSortOrderSigns","arr","visiblePeople","copyPeople","person1","person2","localeCompare","reverse","preparedVisiblePeople","toLowerCase","PeoplePage","get","getAll","filterPeople","useMemo","filteredBySex","filteredByQuery","Math","ceil","useEffect","createRoot","document","getElementById","render","path","element","index"],"mappings":"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","file":"static/js/main.ffb48b6b.chunk.js","sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const getLinkClass = ({ isActive }:{ isActive: boolean }) => {\n    return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n  };\n\n  const [searchParams] = useSearchParams();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to={`/people?${searchParams.toString()}`}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  const location = useLocation();\n  const isHome = location.pathname === '/home';\n\n  if (isHome) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\n\nexport const PeopleContext = React.createContext({\n  peoplE: [] as Person[],\n  loading: false,\n  messageNotHasPeople: '',\n  errorMessage: '',\n  loadPeople: async () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [peoplE, setPeoplE] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [messageNotHasPeople, setMessageNotHasPeople] = useState('');\n\n  const loadPeople = () => {\n    setErrorMessage('');\n\n    setLoading(true);\n\n    return getPeople()\n      .then((people: Person[]) => {\n        setPeoplE(people);\n\n        if (!people.length) {\n          setMessageNotHasPeople('There are no people on the server');\n        }\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setLoading(false));\n  };\n\n  const value = {\n    peoplE,\n    loading,\n    messageNotHasPeople,\n    errorMessage,\n    loadPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export enum SexEnum {\n  ALL = '',\n  MALE = 'm',\n  FEMALE = 'f',\n}\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SexEnum } from '../utils/SexEnum';\n\ntype Props = {\n  centuries: string[],\n  query: string,\n  sex: string,\n};\n\nconst cEnturies = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters: React.FC<Props> = ({\n  centuries,\n  query,\n  sex,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // eslint-disable-next-line\n  function setSearchWith(params: any) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  const handleQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: e.target.value || null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={cn('', { 'is-active': sex === SexEnum.ALL })}\n          to={{ search: getSearchWith(searchParams, { sex: null }) }}\n        >\n          All\n        </Link>\n\n        <Link\n          className={cn('', { 'is-active': sex === SexEnum.MALE })}\n          to={{\n            search: getSearchWith(searchParams,\n              { sex: SexEnum.MALE || null }),\n          }}\n        >\n          Male\n        </Link>\n\n        <Link\n          className={cn('', { 'is-active': sex === SexEnum.FEMALE })}\n          to={{\n            search: getSearchWith(searchParams,\n              { sex: SexEnum.FEMALE || null }),\n          }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {\n              cEnturies.map((century) => (\n                <Link\n                  key={century}\n                  data-cy=\"century\"\n                  className={cn('button mr-1', {\n                    'is-info': centuries.includes(century.toString()),\n                  })}\n                  to={{\n                    search: getSearchWith(searchParams, {\n                      centuries: (centuries.includes(century))\n                        ? centuries.filter((ch) => ch !== century)\n                        : [...centuries, century],\n                    }),\n                  }}\n                >\n                  {century}\n                </Link>\n              ))\n            }\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': (!!centuries.length),\n              })}\n              to={{ search: getSearchWith(searchParams, { centuries: null }) }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{\n            search: getSearchWith(searchParams,\n              { sex: null, query: null, centuries: null }),\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { useContext } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PeopleContext } from '../stores/PeopleContext';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n  const { slugPerson } = useParams();\n  const {\n    slug,\n    motherName,\n    fatherName,\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n  const { peoplE } = useContext(PeopleContext);\n  const mother = peoplE.find((pErson) => pErson.name === motherName);\n  const father = peoplE.find((pErson) => pErson.name === fatherName);\n\n  const parrentLink = (parrent: Person | null) => {\n    return (\n      <Link\n        to={`/people/${parrent?.slug}?${searchParams.toString()}`}\n        className={cn({ 'has-text-danger': parrent?.sex === 'f' })}\n      >\n        {parrent?.name}\n      </Link>\n    );\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slugPerson === slug })}\n    >\n      <td>\n        <Link\n          className={cn({ 'has-text-danger': sex === 'f' })}\n          to={`/people/${slug}?${searchParams.toString()}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother ? (parrentLink(mother)) : (motherName || '-')}\n      </td>\n\n      <td>\n        {father ? (parrentLink(father)) : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[],\n  sorts: string[],\n  order: string,\n  searchParams: URLSearchParams,\n};\n\nfunction preparedVisiblePeople(\n  people: Person[],\n  { sort, order }: { sort: string, order: string },\n) {\n  let copyPeople = [...people];\n\n  if (sort) {\n    copyPeople = copyPeople.sort((person1, person2) => {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          return person1[sort].localeCompare(person2[sort]);\n        case 'born':\n        case 'died':\n          return person1[sort] - person2[sort];\n        default: return 0;\n      }\n    });\n  }\n\n  if (order) {\n    copyPeople = copyPeople.reverse();\n  }\n\n  return copyPeople;\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  sorts,\n  order,\n  searchParams,\n}) => {\n  const sortOrderArr = ['Name', 'Sex', 'Born', 'Died'];\n  const sort = sorts[0];\n\n  const toggleSortOrderSigns = (arr: string) => {\n    // eslint-disable-next-line\n    return !sorts.includes(arr)\n      ? {\n        search: getSearchWith(\n          searchParams, { sort: arr || null, order: null },\n        ),\n      }\n      // eslint-disable-next-line\n      : (\n        sorts.includes(arr) && !order\n      )\n        ? {\n          search: getSearchWith(\n            searchParams, { order: 'desc' || null },\n          ),\n        } : (sorts.includes(arr) && order)\n          ? {\n            search: getSearchWith(\n              searchParams, { sort: null, order: null },\n            ),\n          }\n          : {};\n  };\n\n  const visiblePeople = preparedVisiblePeople(people, { sort, order });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {\n            sortOrderArr.map((arr) => (\n              <th key={arr}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {arr}\n                  <Link to={toggleSortOrderSigns(arr.toLowerCase())}>\n                    <span className=\"icon\">\n                      <i\n                        className={cn({\n                          'fas fa-sort': !sorts.includes(arr.toLowerCase()),\n                          'fas fa-sort-up': sorts.includes(arr.toLowerCase())\n                            && !order,\n                          'fas fa-sort-down': sorts.includes(arr.toLowerCase())\n                            && order,\n                        })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n            ))\n          }\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          visiblePeople.map((person) => (\n            <PersonLink\n              key={person.slug}\n              person={person}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useContext, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { PeopleContext } from '../stores/PeopleContext';\nimport { SexEnum } from '../utils/SexEnum';\n\nexport const PeoplePage = () => {\n  const {\n    peoplE,\n    loading,\n    messageNotHasPeople,\n    errorMessage,\n    loadPeople,\n  } = useContext(PeopleContext);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sorts = searchParams.getAll('sort') || [];\n  const order = searchParams.get('order') || '';\n\n  const filterPeople = useMemo(() => {\n    const filteredBySex = peoplE.filter((person) => {\n      switch (sex) {\n        case SexEnum.ALL: return person.sex;\n        case SexEnum.MALE: return person.sex === SexEnum.MALE;\n        case SexEnum.FEMALE: return person.sex === SexEnum.FEMALE;\n        default: return person.sex;\n      }\n    });\n\n    const filteredByQuery = query\n      ? filteredBySex.filter((person) => person.name\n        .toLowerCase().includes(query.toLowerCase())\n        || person.motherName?.toLowerCase().includes(query.toLowerCase())\n        || person.fatherName?.toLowerCase().includes(query.toLowerCase()))\n      : filteredBySex;\n\n    const filteredByCenturies = centuries.length\n      ? filteredByQuery.filter((person) => centuries\n        .find((century) => Math.ceil(person.born / 100) === +century))\n      : filteredByQuery;\n\n    return filteredByCenturies;\n  }, [peoplE, sex, query, centuries]);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {\n            !loading && peoplE.length && (\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters\n                  centuries={centuries}\n                  query={query}\n                  sex={sex}\n                />\n              </div>\n            )\n          }\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {\n                loading && (\n                  <Loader />\n                )\n              }\n\n              {\n                errorMessage && (\n                  <p data-cy=\"peopleLoadingError\">{errorMessage}</p>\n                )\n              }\n\n              {\n                messageNotHasPeople && (\n                  <p data-cy=\"noPeopleMessage\">\n                    {messageNotHasPeople}\n                  </p>\n                )\n              }\n\n              {!filterPeople.length && !loading && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {\n                !loading\n                && !messageNotHasPeople\n                && !errorMessage\n                && !!filterPeople.length && (\n                  <PeopleTable\n                    people={filterPeople}\n                    sorts={sorts}\n                    order={order}\n                    searchParams={searchParams}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { Route, HashRouter as Router, Routes } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeopleProvider } from './stores/PeopleContext';\nimport { PeoplePage } from './components/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <PeopleProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<h1 className=\"title\">Home Page</h1>} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slugPerson\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Route>\n        </Routes>\n      </PeopleProvider>\n    </Router>,\n  );\n"],"sourceRoot":""}